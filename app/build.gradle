apply plugin: 'com.android.application'

//Dagger
//apply plugin: 'com.neenbedankt.android-apt'

// V2: Apply the new Endpoints Framework client plugin
apply plugin: 'com.google.cloud.tools.endpoints-framework-client'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        // V2: Add the new Endpoints Framework plugin dependencies
        classpath 'com.google.cloud.tools:endpoints-framework-gradle-plugin:1.0.0'
        //classpath 'com.google.gms:google-services:3.0.0'
        //classpath 'com.google.gms:google-services:3.1.1'
        classpath 'com.google.gms:google-services:4.1.0'

    }
}
android {
    signingConfigs {
        debug
        release
    }

    dexOptions {
        javaMaxHeapSize "4g" // 2g should be also OK
    }

    def versionPropsFile = file('version.properties')
    def versionBuild

    /*Setting default value for versionBuild which is the last incremented value stored in the file */
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = versionProps['VERSION_BUILD'].toInteger()
    } else {
        throw new GradleException("Could not read version.properties!")
    }

    /* Wrapping inside a method avoids auto incrementing on every gradle task run. Now it runs only when we build apk */
    ext.autoIncrementBuildNumber = {
        if (versionPropsFile.canRead()) {
            def Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
            println versionBuild
            versionProps['VERSION_BUILD'] = versionBuild.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        } else {
            throw new GradleException("Could not read version.properties!")
        }
    }

    compileSdkVersion 29
    buildToolsVersion "29.0.0"
    defaultConfig {
        applicationId "org.fraunhofer.cese.madcap"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode versionBuild
        versionName "1.1.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled = true
    }
    buildTypes {
        release {
//            shrinkResources false
//            minifyEnabled
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            signingConfig signingConfigs.debug
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        abortOnError false
    }

    tasks.whenTaskAdded { task ->
        if (task.name == ':app:assembleRelease') {
            autoIncrementBuildNumber()
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

configurations {
    implementation.exclude group: "org.apache.httpcomponents", module: "httpclient"
}

dependencies {
//    compile project(path: ':backend', configuration: 'android-backend')
    implementation project(':sensorlisteners')
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // V2: Endpoints Framework v2 migration
    endpointsServer project(path: ':backend', configuration: 'endpoints')
    implementation 'com.google.api-client:google-api-client-android:1.23.0'
    implementation 'com.google.http-client:google-http-client-android:1.22.0'

    implementation 'com.google.firebase:firebase-config:11.8.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.j256.ormlite:ormlite-android:5.0'
    implementation 'com.google.android.gms:play-services-auth:11.8.0'
    implementation 'com.google.android.gms:play-services-location:11.8.0'
    implementation 'com.google.android.gms:play-services-iid:11.8.0'
    implementation 'com.google.android.gms:play-services-awareness:11.8.0'
    implementation 'com.google.firebase:firebase-core:11.8.0'
    implementation 'com.google.firebase:firebase-messaging:11.8.0'
    //compile 'com.google.firebase:firebase-crash:10.2.4'
    implementation 'com.google.firebase:firebase-crash:11.8.0'
    // Add dependency for crashlytics
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.5'
    implementation 'com.android.support:multidex:1.0.1'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'javax.annotation:javax.annotation-api:1.2'
    implementation 'javax.inject:javax.inject:1'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    //Dagger
    compile 'com.google.dagger:dagger:2.10'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.10'

    implementation 'com.jakewharton.timber:timber:4.5.1'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    implementation 'org.greenrobot:eventbus:3.0.0'
}

def debugProps = new Properties()
debugProps.load(new FileInputStream(rootProject.file("debug.properties")))
android.signingConfigs.debug.storeFile rootProject.file(debugProps.keyStore)
android.signingConfigs.debug.storePassword debugProps.keyStorePassword
android.signingConfigs.debug.keyAlias debugProps.keyAlias
android.signingConfigs.debug.keyPassword debugProps.keyAliasPassword

def releaseProps = new Properties()
releaseProps.load(new FileInputStream(rootProject.file("release.properties")))
android.signingConfigs.release.storeFile rootProject.file(releaseProps.keyStore)
android.signingConfigs.release.storePassword releaseProps.keyStorePassword
android.signingConfigs.release.keyAlias releaseProps.keyAlias
android.signingConfigs.release.keyPassword releaseProps.keyAliasPassword

apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'
